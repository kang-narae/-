import pandas as pd
import numpy as np

'''
시계열 자료는 인덱스가 날짜 혹은 시간인 데이터. 
판다스에서 시계열 자료를 생성하려면 인덱스를 DatetimeIndex 자료형으로 만들어야. 
DatetimeIndex는 특정한 순간에 기록된 타임스탬프(timestamp) 형식의 시계열 자료를 다루기 위한 인덱스. 
타임스탬프 인덱스의 라벨값이 반드시 일정한 간격일 필요는 없다.
'''


'''pd.to_datetime 함수
 날짜/시간을 나타내는 문자열을 자동으로 datetime 자료형으로 바꾸고 DatetimeIndex 자료형 인덱스를 생성'''

date_str = ["2018, 1, 1", "2018, 1, 4", "2018, 1, 5", "2018, 1, 6"]
idx = pd.to_datetime(date_str)
idx    #DatetimeIndex(['2018-01-01', '2018-01-04', '2018-01-05', '2018-01-06'], dtype='datetime64[ns]', freq=None)


#np.random.seed(0)    #이건 여기 왜 있는 거지?
s = pd.Series(np.random.randn(4), index=idx)

'''
2018-01-01    1.764052
2018-01-04    0.400157
2018-01-05    0.978738
2018-01-06    2.240893
dtype: float64'''


#pd.date_range 함수를 쓰면 모든 날짜/시간을 일일히 입력할 필요없이 
# 시작일과 종료일 또는 시작일과 기간을 입력하면 범위 내의 인덱스를 생성

pd.date_range("2018-4-1", "2018-4-30")
'''DatetimeIndex(['2018-04-01', '2018-04-02', '2018-04-03', '2018-04-04',
               '2018-04-05', '2018-04-06', '2018-04-07', '2018-04-08',
               '2018-04-09', '2018-04-10', '2018-04-11', '2018-04-12',
               '2018-04-13', '2018-04-14', '2018-04-15', '2018-04-16',
               '2018-04-17', '2018-04-18', '2018-04-19', '2018-04-20',
               '2018-04-21', '2018-04-22', '2018-04-23', '2018-04-24',
               '2018-04-25', '2018-04-26', '2018-04-27', '2018-04-28',
               '2018-04-29', '2018-04-30'],
              dtype='datetime64[ns]', freq='D')'''

pd.date_range(start="2018-4-1", periods=30)

#freq 인수로 특정한 날짜만 생성되도록 할 수도 있다
pd.date_range("2018-4-1", "2018-4-30", freq="B")   #B는 주말이 아닌 평일만 나오게 한다.




#dt 접근자


s = pd.Series(pd.date_range("2020-12-25", periods=100, freq="D"))
s.dt.year
s.dt.weekday
s.dt.strftime("%Y년 %m월 %d일")












