import numpy as np

'''
stack 명령은 dstack의 기능을 확장한 것
dstack처럼 마지막 차원으로 연결하는 것이 아니라 (ex, dstack은 n행 m열  x개 합치면 ->  n깊이, m행, x열이 됨)

사용자가 지정한 차원(축으로) 배열을 연결한다. 

axis 인수(디폴트 0)를 사용하여 연결후의 회전 방향을 정한다. --?
디폴트 인수값은 0이고 가장 앞쪽에 차원이 생성된다.   ---?  앞쪽의 차원이 무슨 뜻?
즉, 배열 두 개가 겹치게 되므로 연결하고자 하는 배열들의 크기가 모두 같아야 한다.

다음 예에서는 axis=0 이므로 가장 바깥에 값이 2인 차원이 추가된다. --- ????
즉, shape 변화는 2개의 (3 x 4) -> 1개의 (2 x 3 x 4) 이다..
'''


c1= np.array([[15., 1., 1., 1.],
       [10., 1., 2., 2.],
       [3., 7., 1., 3.]])             #3행4열

c2= np.array([[100., 0., 0., 200.],
       [13., 0., 0., 50.],
       [23., 0., 25., 29.]])   #3행4열

print(np.dstack([c1, c2]))   # 3깊이, 4행, 2열   (2개를 더해서 2열이 된 거.)
'''[[[ 15. 100.]
  [  1.   0.]
  [  1.   0.]
  [  1. 200.]]

 [[ 10.  13.]
  [  1.   0.]
  [  2.   0.]
  [  2.  50.]]

 [[  3.  23.]
  [  7.   0.]
  [  1.  25.]
  [  3.  29.]]]
'''


''' 다시.. 
stack 명령은 dstack의 기능을 확장한 것으로 dstack처럼 마지막 차원으로 연결하는 것이 아니라 사용자가 지정한 차원(축으로) 배열을 연결한다. 
axis 인수(디폴트 0)를 사용하여 연결후의 회전 방향을 정한다. 디폴트 인수값은 0이고 가장 앞쪽에 차원이 생성된다. 
즉, 배열 두 개가 겹치게 되므로 연결하고자 하는 배열들의 크기가 모두 같아야 한다.
다음 예에서는 axis=0 이므로 가장 바깥에 값이 2인 차원이 추가된다. 즉, shape 변화는 2개의 (3 x 4) -> 1개의 (2 x 3 x 4) 이다..'''
c1= np.array([[15., 1., 1., 1.],
       [10., 1., 2., 2.],
       [3., 7., 1., 3.]])             #3행4열

c2= np.array([[100., 0., 0., 200.],
       [13., 0., 0., 50.],
       [23., 0., 25., 29.]])   #3행4열

print(np.stack([c1,c2]))    # 2깊이, 3행, 4열    디폴트는 axis=0     (가장 앞쪽 = 가장 바깥 ?)
'''
[[[ 15.   1.   1.   1.]
  [ 10.   1.   2.   2.]
  [  3.   7.   1.   3.]]

 [[100.   0.   0. 200.]
  [ 13.   0.   0.  50.]
  [ 23.   0.  25.  29.]]]'''

c1= np.array([[15., 1., 1., 1.],
       [10., 1., 2., 2.],
       [3., 7., 1., 3.]])             #3행4열

c2= np.array([[100., 0., 0., 200.],
       [13., 0., 0., 50.],
       [23., 0., 25., 29.]])   #3행4열

print(np.stack([c1, c2], axis=1))    #axis 인수가 1이면 두번째 차원으로 새로운 차원이 삽입. shape 변화는 2개의 (3 x 4) -> 1개의 (3 x 2 x 4) 이다
'''
[[[ 15.   1.   1.   1.]
  [100.   0.   0. 200.]]

 [[ 10.   1.   2.   2.]
  [ 13.   0.   0.  50.]]

 [[  3.   7.   1.   3.]
  [ 23.   0.  25.  29.]]]'''           #3깊이, 2행, 4열